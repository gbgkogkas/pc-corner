/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2020-01-26 23:13:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import java.text.DecimalFormat;
import com.sample.Cart;
import java.text.MessageFormat;
import java.util.HashMap;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"content-type\" content=\"text/html; charset=iso-8859-15\">\r\n");
      out.write("    <head>\r\n");
      out.write("        <title>Your PC Corner</title>\r\n");
      out.write("        <style>\r\n");
      out.write("            html, body {\r\n");
      out.write("                padding: 0%;\r\n");
      out.write("                margin: 0%;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            div.row {\r\n");
      out.write("                position: relative;\r\n");
      out.write("                \r\n");
      out.write("                width: 60%;\r\n");
      out.write("                margin-left: 20%;\r\n");
      out.write("                margin-right: 20%;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            div.row div.row {               \r\n");
      out.write("                width: 100%;\r\n");
      out.write("                margin: 0;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .button {\r\n");
      out.write("                background-color: blue;\r\n");
      out.write("                color: white;\r\n");
      out.write("                padding: 1em;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .text-center {\r\n");
      out.write("                text-align: center;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .text-right {\r\n");
      out.write("                text-align: right;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .margin-top {\r\n");
      out.write("                margin-top: 1rem;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .margin-bottom {\r\n");
      out.write("                margin-bottom: 1rem;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .hide {\r\n");
      out.write("                display: none;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            header {\r\n");
      out.write("                border-bottom: 1px solid black;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .header-row {\r\n");
      out.write("                display: inline-flex;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .menu-line{\r\n");
      out.write("                list-style: none;\r\n");
      out.write("                padding: 0%;\r\n");
      out.write("                margin: 0%;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .menu-line li{\r\n");
      out.write("                display: table-cell;\r\n");
      out.write("                vertical-align: middle;\r\n");
      out.write("                height: 2em;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .header-row .menu-line {\r\n");
      out.write("                position: absolute;\r\n");
      out.write("                right: 0;\r\n");
      out.write("\r\n");
      out.write("                display: table-row;\r\n");
      out.write("                margin-top: 1.4em;\r\n");
      out.write("                margin-bottom: 1.4em;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .header-row .menu-line .button {\r\n");
      out.write("                padding: 1em;\r\n");
      out.write("                text-decoration: none;\r\n");
      out.write("                color: #000;\r\n");
      out.write("\r\n");
      out.write("                background-color: white;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            #products-table, #cart-table {\r\n");
      out.write("                width: 100%;\r\n");
      out.write("                border-collapse: collapse;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            #products-table thead, #cart-table thead {\r\n");
      out.write("                text-align: center;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            #products-table td, #cart-table td {\r\n");
      out.write("                border: 1px solid black;\r\n");
      out.write("                height: 2em;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            #products-table td .button {\r\n");
      out.write("                text-align: center;\r\n");
      out.write("                display: block;\r\n");
      out.write("\r\n");
      out.write("                margin-left: auto;\r\n");
      out.write("                margin-right: auto;\r\n");
      out.write("\r\n");
      out.write("                padding: 0.3em;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            #cart-table input {\r\n");
      out.write("                width: 70%;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            #cart_price_table {\r\n");
      out.write("                width: 10rem;\r\n");
      out.write("\r\n");
      out.write("                position: absolute;\r\n");
      out.write("                right: 0;\r\n");
      out.write("\r\n");
      out.write("                margin: 0;\r\n");
      out.write("                padding: 0;\r\n");
      out.write("\r\n");
      out.write("                list-style: none;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .cart_price_label{\r\n");
      out.write("                text-align: left;\r\n");
      out.write("                float: left;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .button.cart_remove {\r\n");
      out.write("                float: right;\r\n");
      out.write("\r\n");
      out.write("                background-color: red;\r\n");
      out.write("                padding: 0.2em;\r\n");
      out.write("                margin-right: 0.5em;\r\n");
      out.write("\r\n");
      out.write("                text-decoration: none;\r\n");
      out.write("            }\r\n");
      out.write("        </style>\r\n");
      out.write("    </head>\r\n");
      out.write("    <body>\r\n");
      out.write("        <header>\r\n");
      out.write("            <div class=\"row header-row\">\r\n");
      out.write("                <h1>PC Corner</h1>\r\n");
      out.write("                <ul class=\"menu-line\">\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a class=\"button tab-trigger\" data-target=\"products\" href=\"#\">Products</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a class=\"button tab-trigger\" data-target=\"cart\" href=\"#\">Cart</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("        </header>\r\n");
      out.write("        <main>\r\n");
      out.write("            <section id=\"products\" class=\"tab\">\r\n");
      out.write("                <div class=\"row\">\r\n");
      out.write("                    <table id=\"products-table\">\r\n");
      out.write("                        <thead>\r\n");
      out.write("                            <td>name</td>\r\n");
      out.write("                            <td>description</td>\r\n");
      out.write("                            <td>weight</td>\r\n");
      out.write("                            <td>price</td>\r\n");
      out.write("                            <td></td>\r\n");
      out.write("                        </thead>\r\n");
      out.write("                        <tbody>\r\n");
      out.write("                            ");

                                Cart cart = (Cart) session.getAttribute("cart");
                                HashMap<Integer, Integer> cartProductList = null;

                                if (cart != null) {
                                    cartProductList = cart.getProductList();
                                }

                                JSONArray products = (JSONArray) request.getAttribute("products");
                                JSONArray inCart = new JSONArray();

                                if (products != null) {
                                    for (int i = 0; i < products.size(); i++) {
                                        JSONObject product = (JSONObject) products.get(i);

                                        DecimalFormat weightFormat = new DecimalFormat("0.000");
                                        String weight = weightFormat.format(product.get("weight"));

                                        DecimalFormat priceFormat = new DecimalFormat("0.00");
                                        String price = priceFormat.format(product.get("price"));

                                        out.println(MessageFormat.format("<tr><td>{0}</td><td>{1}</td><td>{2} Kg</td><td>{3} &euro;</td><td><a class=\"button\" href=\"#\" data-product-id=\"{4}\">To cart</a></td></tr>",
                                            product.get("name"), product.get("description"), weight, price, product.get("ID")));

                                        if (cartProductList != null && cartProductList.containsKey(Integer.valueOf(product.get("ID").toString()))) {
                                            product.put("quantity", cartProductList.get(Integer.valueOf(product.get("ID").toString())));
                                            inCart.add(product);
                                        }
                                    }
                                }
                            
      out.write("\r\n");
      out.write("                        </tbody>\r\n");
      out.write("                    </table>\r\n");
      out.write("                </div>\r\n");
      out.write("            </section>\r\n");
      out.write("            <section id=\"cart\" class=\"hide tab\">\r\n");
      out.write("                <div id=\"discount_notification\" class=\"row text-center hide margin-bottom\">\r\n");
      out.write("                    Congratulation you got a 10% discount\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"row\">\r\n");
      out.write("                    <table id=\"cart-table\">\r\n");
      out.write("                        <thead>\r\n");
      out.write("                            <td>name</td>\r\n");
      out.write("                            <td width=\"10%\">weight</td>\r\n");
      out.write("                            <td width=\"10%\">quantity</td>\r\n");
      out.write("                            <td width=\"10%\">price</td>\r\n");
      out.write("                        </thead>\r\n");
      out.write("                        <tbody id=\"cartTable\">\r\n");
      out.write("                            ");

                                if (inCart.size() > 0) {
                                    for (int i = 0; i < inCart.size(); i++) {
                                        JSONObject product = (JSONObject) inCart.get(i);

                                        DecimalFormat weightFormat = new DecimalFormat("0.000");
                                        DecimalFormat priceFormat = new DecimalFormat("0.00");

                                        String weight = weightFormat.format(Float.valueOf(product.get("weight").toString()) * Float.valueOf(product.get("quantity").toString()));
                                        String price = priceFormat.format(Float.valueOf(product.get("price").toString()) * Float.valueOf(product.get("quantity").toString()));

                                        out.println(MessageFormat.format("<tr id=\"product_{4}\" data-product-id=\"{4}\"><td>{0}<a href=\"#\" class=\"button cart_remove\">X</a></td><td><span class=\"weight_display\">{1}</span></td><td><input class=\"quantity\" type=\"number\" value=\"{2}\"/></td><td><span class=\"price_display\">{3}</span> &euro;</td></tr>",
                                            product.get("name"), weight, product.get("quantity"), price, product.get("ID")));
                                    }
                                }
                            
      out.write("\r\n");
      out.write("                        </tbody>\r\n");
      out.write("                    </table>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"row margin-top text-right\">\r\n");
      out.write("                    <ul id=\"cart_price_table\">\r\n");
      out.write("                        <li>\r\n");
      out.write("                            <span class=\"cart_price_label\">Cost</span>\r\n");
      out.write("                            <div><span id=\"cost_display\">");
 if (cart != null) {out.println(cart.getFinalCost());} 
      out.write("</span> &euro;</div>\r\n");
      out.write("                        </li>\r\n");
      out.write("                        <li id=\"discount_display\" class=\"hide\">\r\n");
      out.write("                            <span class=\"cart_price_label\">Discount</span>\r\n");
      out.write("                            <div>10%</div>\r\n");
      out.write("                        </li>\r\n");
      out.write("                        <li>\r\n");
      out.write("                            <span class=\"cart_price_label\">Postage</span>\r\n");
      out.write("                            <div><span id=\"postage_display\">");
 if (cart != null) {out.println(cart.getPostage());} 
      out.write("</span> &euro;</div>\r\n");
      out.write("                        </li>\r\n");
      out.write("                        <li>\r\n");
      out.write("                            <span class=\"cart_price_label\">Total cost</span>\r\n");
      out.write("                            <div><span id=\"total_display\">");
 if (cart != null) {out.println(cart.getFinalCost() + cart.getPostage());} 
      out.write("</span> &euro;</div>\r\n");
      out.write("                        </li>\r\n");
      out.write("                    </ul>\r\n");
      out.write("                </div>\r\n");
      out.write("            </section>\r\n");
      out.write("        </main>\r\n");
      out.write("        <script src=\"https://code.jquery.com/jquery-3.4.1.min.js\" integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("        <script>\r\n");
      out.write("             $(document).ready(function () {\r\n");
      out.write("                var products = ");
 out.println(products.toString()); 
      out.write("\r\n");
      out.write("                    inCart = ");
 if (cartProductList != null) {out.println(new JSONObject(cartProductList).toString());} else {out.println("{}");} 
      out.write(";\r\n");
      out.write("\r\n");
      out.write("                $(document)\r\n");
      out.write("                    .on('change', '.quantity', function (e) {\r\n");
      out.write("                        var obj = $(this),\r\n");
      out.write("                            tr = obj.closest('tr');\r\n");
      out.write("\r\n");
      out.write("                        $.ajax({\r\n");
      out.write("                            method: \"POST\",\r\n");
      out.write("                            url: \"/pc-corner/cart/update\",\r\n");
      out.write("                            data: {\r\n");
      out.write("                                product_id : tr.data('product-id'),\r\n");
      out.write("                                quantity : obj.val(),\r\n");
      out.write("                            },\r\n");
      out.write("                            success: function (data) {\r\n");
      out.write("                                updateCart(data);\r\n");
      out.write("                            }\r\n");
      out.write("                        });\r\n");
      out.write("                    })\r\n");
      out.write("                    .on('click', '.cart_remove', function (e) {\r\n");
      out.write("                        e.preventDefault();\r\n");
      out.write("\r\n");
      out.write("                        var obj = $(this),\r\n");
      out.write("                            tr = obj.closest('tr');\r\n");
      out.write("\r\n");
      out.write("                        $.ajax({\r\n");
      out.write("                            method: \"POST\",\r\n");
      out.write("                            url: \"/pc-corner/cart/remove\",\r\n");
      out.write("                            data: {\r\n");
      out.write("                                product_id : tr.data('product-id'),\r\n");
      out.write("                            },\r\n");
      out.write("                            success: function (data) {\r\n");
      out.write("                                updateCart(data);\r\n");
      out.write("                            }\r\n");
      out.write("                        });\r\n");
      out.write("                    });\r\n");
      out.write("\r\n");
      out.write("                $('.tab-trigger').on('click', function (e) {\r\n");
      out.write("                    e.preventDefault();\r\n");
      out.write("\r\n");
      out.write("                    $('.tab').hide();\r\n");
      out.write("                    $('#' + $(this).data('target')).show();\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("                $('#products .button').on('click', function (e) {\r\n");
      out.write("                    e.preventDefault();\r\n");
      out.write("\r\n");
      out.write("                    var obj = $(this);\r\n");
      out.write("\r\n");
      out.write("                    $.ajax({\r\n");
      out.write("                        method: \"POST\",\r\n");
      out.write("                        url: \"/pc-corner/cart/add\",\r\n");
      out.write("                        data: {\r\n");
      out.write("                            product_id : obj.data('product-id')\r\n");
      out.write("                        },\r\n");
      out.write("                        success: function (data) {\r\n");
      out.write("                            updateCart(data);\r\n");
      out.write("                        }\r\n");
      out.write("                    });\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("                function updateCart (data) {\r\n");
      out.write("                    var cartTable = $('#cartTable'),\r\n");
      out.write("                        cost_display = $('#cost_display'),\r\n");
      out.write("                        postage_display = $('#postage_display'),\r\n");
      out.write("                        total_display = $('#total_display');\r\n");
      out.write("\r\n");
      out.write("                    if (Object.keys(inCart).indexOf(data.data.product.id.toString()) < 0) {\r\n");
      out.write("                        var product = products.filter(function (a,b) {\r\n");
      out.write("                            if (a.ID == data.data.product.id)\r\n");
      out.write("                                return a;\r\n");
      out.write("                        })[0];\r\n");
      out.write("\r\n");
      out.write("                        cartTable.append('<tr id=\"product_' + data.data.product.id + '\" data-product-id=\"' + data.data.product.id + '\"><td>' + product.name + '<a href=\"#\" class=\"button cart_remove\">X</a></td><td><span class=\"weight_display\">' + data.data.product.weight + '<span></td><td><input class=\"quantity\" type=\"number\" value=\"' + data.data.product.quantity + '\"/></td><td><span class=\"price_display\">' + data.data.product.price + '</span> &euro;</td></tr>')\r\n");
      out.write("\r\n");
      out.write("                        inCart[data.data.product.id] = 1;\r\n");
      out.write("                    } else {\r\n");
      out.write("                        var target = $('#product_' + data.data.product.id);\r\n");
      out.write("\r\n");
      out.write("                        if (data.data.product.quantity) {\r\n");
      out.write("                            var quantity = target.find('.quantity'),\r\n");
      out.write("                                weight_display = target.find('.weight_display'),\r\n");
      out.write("                                price_display = target.find('.price_display');\r\n");
      out.write("\r\n");
      out.write("                            ++inCart[data.data.product.id];\r\n");
      out.write("\r\n");
      out.write("                            weight_display.text(data.data.product.weight);\r\n");
      out.write("                            price_display.text(data.data.product.price);\r\n");
      out.write("                            quantity.val(data.data.product.quantity);\r\n");
      out.write("                        } else {\r\n");
      out.write("                            target.remove();\r\n");
      out.write("\r\n");
      out.write("                            delete inCart[data.data.product.id];\r\n");
      out.write("\r\n");
      out.write("                            console.log(inCart);\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    cost_display.text(data.data.cart.finalCost);\r\n");
      out.write("                    postage_display.text(data.data.cart.postage);\r\n");
      out.write("                    total_display.text(data.data.cart.finalCost + data.data.cart.postage);\r\n");
      out.write("\r\n");
      out.write("                    $('#discount_display, #discount_notification').toggle(data.data.cart.discounted);\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        </script>\r\n");
      out.write("    </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
